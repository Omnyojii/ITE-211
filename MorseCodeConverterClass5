package MorseCode;

import java.util.Scanner;

public class MorseCodeConverterClass {
	
		Scanner input = new Scanner(System.in);
    	String AlphaNum = "abcdefghijklmnopqrstuvwxyz0123456789";
    	String[] Morse = {
    	//Letters	
    		".-", //a
    		"-...", //b
    		"-.-.", //c
    		"-..", //d
    	 	".", //e
    		"..-.", //f
    		"--.", //g
    		"....", //h
    		"..", //i
    		".---", //j
  			"-.-", //k
    		".-..", //l
    		"--", //m
     		"-.", //n
    		"---", //o
    		".--.", //p
    		"--.-", //q
    		".-.", //r
    		"...", //s
    	 	"-", //t
    		"..-", //u
    		"...-", //v
    		".--", //w
    		"-..-", //x
    		"-.--", //y
    		"--..", //z
    	
    	//Numbers
    		"-----", //0
     		".----", //1
    		"..---", //2
     		"...--", //3
    		"....-", //4
    		".....", //5
     		"-....", //6
     		"--...", //7
     		"---..", //8
     		"----.", //9
   		};

    	
/////////////////////////// MAIN MENU/////////////////////////
    public int displayMainMenu() {	
    	int choice;
    	System.out.println("Please Select Your Option");  // Commands To Choose From
		System.out.println("1: English to Morse Code\n2: Morse Code to English\n3: Exit");
		System.out.print("Input:>>> ");
		
    	do{
    		choice = input.nextInt();
    		if( choice != 1 && choice != 2 && choice != 3 ){
    			System.out.println("\nYou did not enter a valid selection. Try again!\n");
    		}
    	}while( choice != 1 && choice != 2 && choice != 3 );	
    	
    	return choice;
    }
    
    
//////////////////////////// ENGLISH TO MORSE ///////////////////////////////////////////
    public void toMorse(String userEng, int size){

    	String newEng = userEng.toLowerCase();
    	String newMor = "";
    	
    	System.out.println("");
    	
    	for(int i=0; i<size; i++){
    		for(int j=0; j<AlphaNum.length(); j++){
    			if(newEng.charAt(i) == AlphaNum.charAt(j)){
    				//System.out.printf("%s ",Morse[j]); //Array search
    				newMor = newMor.concat(Morse[j]);
    				newMor = newMor.concat(" ");
    				//System.out.printf("%s ",newStr);
    			}
    		}
    		if(newEng.charAt(i) == ' '){
    			newMor = newMor.concat("  ");//WORD SPACE
			}
    	}
    	System.out.println("\n###############################################################");
    	System.out.printf("\n%s",newMor.trim());
    	System.out.println("\n###############################################################");
    
    }//END METHOD
    
    
///////////////////////////MORSE TO ENGLISH///////////////////////
    public void toEnglish(String userMor){
		
		String TrimStr,spcStr;
		TrimStr = userMor.trim();
		spcStr = TrimStr.replaceAll("(  +)", " |");
		spcStr = spcStr.concat(" |");
		
		//WORD
		String [] wordNum = spcStr.split("\\|");
		
		System.out.println("\n\n####################################################");
		
		//LETTER
		int count = 0;
		for (String myWord : wordNum) {
		
			String [] letterNum = myWord.split(" ");
		
			for (String myletter : letterNum){
		
				for(int i=0; i<Morse.length; i++){
					if( myletter.equals(Morse[i]) ){
					//System.out.println(Morse[j] + " ok");
					System.out.print(AlphaNum.charAt(i)); //Array search
					}
		
				}
			}
			
			if(count<wordNum.length-1) {
			System.out.print(" ");
			count++;
			}
		}
		
		System.out.println("\n####################################################");

	}//END METHOD
    
}//END CLASS
